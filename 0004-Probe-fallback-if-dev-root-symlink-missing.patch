From 6583a9e78ada21eb2c848a1ab0845924694897ea Mon Sep 17 00:00:00 2001
From: William Douglas <william.douglas@intel.com>
Date: Mon, 28 Mar 2022 16:17:15 -0700
Subject: [PATCH] Probe fallback if /dev/root symlink missing

Try and use of /dev/gpt-auto-root (created by systemd) in cases where
we try and get the realpath for /dev/root and fail (likely due to the
symlink not being created in the first place).

This resolves an issue seen where on a gpt drive with an ext4 rootfs
the system would fail to identify the rootfs device.

Signed-off-by: William Douglas <william.douglas@intel.com>
---
 src/lib/files.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/lib/files.c b/src/lib/files.c
index 6e499ce..9d16f0a 100644
--- a/src/lib/files.c
+++ b/src/lib/files.c
@@ -526,6 +526,7 @@ char *cbm_get_device_for_mountpoint(const char *mount)
 {
         autofree(char) *dev_path = NULL;
         autofree(FILE_MNT) *tab = NULL;
+        char *real_path = NULL;
         struct mntent *mnt = NULL;
 
         tab = setmntent("/proc/self/mounts", "r");
@@ -535,12 +536,17 @@ char *cbm_get_device_for_mountpoint(const char *mount)
 
         while ((mnt = getmntent(tab)) != NULL) {
                 if (strcmp(mnt->mnt_dir, mount) == 0) {
+                        LOG_DEBUG("Using device path: %s", mnt->mnt_fsname);
                         dev_path = strdup(mnt->mnt_fsname);
                         break;
                 }
         }
 
-        return realpath(dev_path, NULL);
+        real_path = realpath(dev_path, NULL);
+        if (!real_path && strcmp(dev_path, "/dev/root") == 0) {
+                real_path = realpath("/dev/gpt-auto-root", NULL);
+        }
+        return real_path;
 }
 
 bool cbm_system_has_uefi()
-- 
2.35.1

